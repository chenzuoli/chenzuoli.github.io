<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>chenzuoli&#39;s blog</title>
  
  <subtitle>Focus on truth. welcome to correct.</subtitle>
  <link href="https://chenzuoli.github.io/atom.xml" rel="self"/>
  
  <link href="https://chenzuoli.github.io/"/>
  <updated>2024-10-12T12:51:13.270Z</updated>
  <id>https://chenzuoli.github.io/</id>
  
  <author>
    <name>Lee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记录git文件被删如何找回问题</title>
    <link href="https://chenzuoli.github.io/2024/10/12/%E8%AE%B0%E5%BD%95git%E6%96%87%E4%BB%B6%E8%A2%AB%E5%88%A0%E5%A6%82%E4%BD%95%E6%89%BE%E5%9B%9E%E9%97%AE%E9%A2%98/"/>
    <id>https://chenzuoli.github.io/2024/10/12/%E8%AE%B0%E5%BD%95git%E6%96%87%E4%BB%B6%E8%A2%AB%E5%88%A0%E5%A6%82%E4%BD%95%E6%89%BE%E5%9B%9E%E9%97%AE%E9%A2%98/</id>
    <published>2024-10-12T12:42:04.000Z</published>
    <updated>2024-10-12T12:51:13.270Z</updated>
    
    <content type="html"><![CDATA[<p>说下我的场景，git commit后，发现有些不需要的文件被commit了，要回退，结果误操作回滚了此次commit（git reset head操作）导致新增和修改的文件全部丢失。</p><p>这个问题如何恢复文件？</p><span id="more"></span><p>当然，你可以通过sourcetree或者TortoiseGit工具来查看commit的内容，并一一重新修改和创建文件，但是文件太多，非常麻烦。</p><p>去网上找到了解决方案：</p><ol><li>git log -g查看commit id<br><img src="/2024/10/12/%E8%AE%B0%E5%BD%95git%E6%96%87%E4%BB%B6%E8%A2%AB%E5%88%A0%E5%A6%82%E4%BD%95%E6%89%BE%E5%9B%9E%E9%97%AE%E9%A2%98/image.png" alt="commitId"></li><li>git checkout <commitId> &lt;文件&gt;<br><img src="/2024/10/12/%E8%AE%B0%E5%BD%95git%E6%96%87%E4%BB%B6%E8%A2%AB%E5%88%A0%E5%A6%82%E4%BD%95%E6%89%BE%E5%9B%9E%E9%97%AE%E9%A2%98/image-1.png" alt="restore"></commitId></li></ol><p>即可恢复文件。</p><p>好了，记录到这里，持续更新中。</p><p>记录问题也是一种修行。</p><p><img src="/images/%E4%BF%AE%E8%A1%8C.png" alt="修行"></p><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【乐知付加密平台】，您的网络资源可变现<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;说下我的场景，git commit后，发现有些不需要的文件被commit了，要回退，结果误操作回滚了此次commit（git reset head操作）导致新增和修改的文件全部丢失。&lt;/p&gt;
&lt;p&gt;这个问题如何恢复文件？&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="Github" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/Github/"/>
    
    <category term="git" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/Github/git/"/>
    
    
    <category term="git" scheme="https://chenzuoli.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>flask设置session过期时间</title>
    <link href="https://chenzuoli.github.io/2024/10/11/flask%E8%AE%BE%E7%BD%AEsession%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4/"/>
    <id>https://chenzuoli.github.io/2024/10/11/flask%E8%AE%BE%E7%BD%AEsession%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4/</id>
    <published>2024-10-11T14:18:22.000Z</published>
    <updated>2024-10-12T12:52:30.931Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.permanent_session_lifetime = 60</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><p>好了，记录到这里，持续更新中。</p><p>记录问题也是一种修行。</p><p><img src="/images/%E4%BF%AE%E8%A1%8C.png" alt="修行"></p><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【乐知付加密平台】，您的网络资源可变现<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.permanent_session_lifetime = 60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://chenzuoli.github.io/categories/Python/"/>
    
    <category term="Flask" scheme="https://chenzuoli.github.io/categories/Python/Flask/"/>
    
    <category term="Session" scheme="https://chenzuoli.github.io/categories/Python/Flask/Session/"/>
    
    
    <category term="http" scheme="https://chenzuoli.github.io/tags/http/"/>
    
    <category term="flask" scheme="https://chenzuoli.github.io/tags/flask/"/>
    
    <category term="session" scheme="https://chenzuoli.github.io/tags/session/"/>
    
  </entry>
  
  <entry>
    <title>http请求头参数解析</title>
    <link href="https://chenzuoli.github.io/2024/10/11/http%E8%AF%B7%E6%B1%82%E5%A4%B4%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90/"/>
    <id>https://chenzuoli.github.io/2024/10/11/http%E8%AF%B7%E6%B1%82%E5%A4%B4%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90/</id>
    <published>2024-10-11T13:12:25.000Z</published>
    <updated>2024-10-12T12:51:44.967Z</updated>
    
    <content type="html"><![CDATA[<p>记录请求头的一些释义。</p><span id="more"></span><ol><li>X-Expire-In<br>访问令牌过期时间</li><li>User-Agent：用于指示客户端的信息，例如浏览器类型、操作系统等。</li><li>Accept：用于指示客户端可以接受的MIME类型，例如text&#x2F;html, application&#x2F;json表示接受HTML和JSON格式的数据。</li><li>Cookie：用于发送客户端的cookie信息。</li><li>Authorization：用于包含客户端提供的身份验证信息，例如Basic dXNlcm5hbWU6cGFzc3dvcmQ&#x3D;表示使用基本身份验证</li><li>Cache-Control：用于控制缓存行为，例如max-age&#x3D;3600表示缓存有效期为1小时。<br> a. private<br> b. no-cache<br> c. max-age<br> d. must-revalidate<br> private no-cache must-revalidate时，打开新窗口访问时都会重新连接服务器<br> max-age时间内，重新请求，不会重新连接服务器<br> Cache-Control: max-age&#x3D;5(5s内再次访问不会去连接服务器)</li><li>Connection：用于控制连接行为，例如keep-alive表示使用持久连接。<br> Connection 头（header） 决定当前的事务完成后，是否会关闭网络连接。如果该值是“keep-alive”，网络连接就是持久的，不会关闭，使得对同一个服务器的请求可以继续在该连接上完成。</li></ol><!-- more --><p>好了，记录到这里，持续更新中。</p><p>记录问题也是一种修行。</p><p><img src="/images/%E4%BF%AE%E8%A1%8C.png" alt="修行"></p><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【乐知付加密平台】，您的网络资源可变现<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录请求头的一些释义。&lt;/p&gt;</summary>
    
    
    
    <category term="HTTP" scheme="https://chenzuoli.github.io/categories/HTTP/"/>
    
    <category term="Headers" scheme="https://chenzuoli.github.io/categories/HTTP/Headers/"/>
    
    
    <category term="http" scheme="https://chenzuoli.github.io/tags/http/"/>
    
    <category term="headers" scheme="https://chenzuoli.github.io/tags/headers/"/>
    
  </entry>
  
  <entry>
    <title>winforms基本操作-发送http请求</title>
    <link href="https://chenzuoli.github.io/2024/10/07/winforms%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E5%8F%91%E9%80%81http%E8%AF%B7%E6%B1%82/"/>
    <id>https://chenzuoli.github.io/2024/10/07/winforms%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E5%8F%91%E9%80%81http%E8%AF%B7%E6%B1%82/</id>
    <published>2024-10-07T11:25:57.000Z</published>
    <updated>2024-10-07T11:26:46.299Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>发送post请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">using (var client = new HttpClient())</span><br><span class="line">&#123;</span><br><span class="line">    var url = &quot;http://www.example.com/api/post&quot;;</span><br><span class="line">    var content = new StringContent(&quot;&#123; \&quot;key\&quot;: \&quot;value\&quot; &#125;&quot;, Encoding.UTF8, &quot;application/json&quot;);</span><br><span class="line"></span><br><span class="line">    //HttpResponseMessage response = await client.PostAsync(url, content);</span><br><span class="line">    HttpResponseMessage response = await client.GetAsync(url, content);</span><br><span class="line"></span><br><span class="line">    if (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        string responseBody = await response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(responseBody);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(&quot;Error: &quot; + response.StatusCode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发送get请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">string url = &quot;https://www.example.com&quot;; // 替换为你要请求的URL</span><br><span class="line">using (HttpClient client = new HttpClient())</span><br><span class="line">&#123;</span><br><span class="line">    HttpResponseMessage response = await client.GetAsync(url);</span><br><span class="line">    if (response.IsSuccessStatusCode)</span><br><span class="line">    &#123;</span><br><span class="line">        string content = await response.Content.ReadAsStringAsync();</span><br><span class="line">        Console.WriteLine(content);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine($&quot;Error: &#123;response.StatusCode&#125;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;发送post请求：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>winforms基本操作-将datagridview内容保存为excel文件</title>
    <link href="https://chenzuoli.github.io/2024/10/06/winforms%E5%B0%86datagridview%E5%86%85%E5%AE%B9%E4%BF%9D%E5%AD%98%E4%B8%BAexcel%E6%96%87%E4%BB%B6/"/>
    <id>https://chenzuoli.github.io/2024/10/06/winforms%E5%B0%86datagridview%E5%86%85%E5%AE%B9%E4%BF%9D%E5%AD%98%E4%B8%BAexcel%E6%96%87%E4%BB%B6/</id>
    <published>2024-10-06T02:29:08.000Z</published>
    <updated>2024-10-06T02:33:10.654Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录一下将winforms展示的datagridview，导出或保存为excel文件。</p><span id="more"></span><p>这里说一下环境、版本信息：<br>win系统：win11<br>框架：winforms<br>依赖：Microsoft.Office.Interop.Excel<br>.net：8.0.401<br>.net framework: 4.8</p><p>DataGridView对象为dataGridView1，然后添加一个按钮，绑定事件btnConfirm即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">private void btnConfirm(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    Microsoft.Office.Interop.Excel.Application excelApp = new Microsoft.Office.Interop.Excel.Application();</span><br><span class="line">    if (excelApp == null)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(&quot;无法创建Excel，您可能需要安装Excel&quot;);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 创建excel工作薄</span><br><span class="line">    Workbook workBook = excelApp.Workbooks.Add(Type.Missing);</span><br><span class="line">    Worksheet workSheet = null;</span><br><span class="line"></span><br><span class="line">    // 创建工作表</span><br><span class="line">    workSheet = workBook.Sheets[&quot;Sheet1&quot;];</span><br><span class="line">    workSheet = workBook.ActiveSheet;</span><br><span class="line"></span><br><span class="line">    // 表头</span><br><span class="line">    Range headerRow = workSheet.Rows[1];</span><br><span class="line">    headerRow.Cells[1, 1] = &quot;文件路径&quot;;</span><br><span class="line">    headerRow.Cells[1, 2] = &quot;文件名&quot;;</span><br><span class="line">    // 表头格式</span><br><span class="line">    headerRow.Font.Bold = true;</span><br><span class="line">    headerRow.Interior.Color = ColorTranslator.ToOle(Color.LightBlue);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // 将DataGridView表格内数据复制到excel工作表</span><br><span class="line">    for (int i = 0; i &lt; dataGridView1.Rows.Count; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int j = 0; j &lt; dataGridView1.Columns.Count; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            workSheet.Cells[i + 2, j + 1] = dataGridView1.Rows[i].Cells[j].Value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 导出到excel文件</span><br><span class="line">    SaveFileDialog saveFileDialog = new SaveFileDialog();</span><br><span class="line">    saveFileDialog.Filter = &quot;Excel Workbook (*.xlsx)|*.xlsx|Excel 97-2003 Workbook (*.xls)|*.xls&quot;;</span><br><span class="line">    saveFileDialog.Title = &quot;保存文件名称到Excel&quot;;</span><br><span class="line">    saveFileDialog.ShowDialog();</span><br><span class="line"></span><br><span class="line">    if (saveFileDialog.FileName != &quot;&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        try</span><br><span class="line">        &#123;</span><br><span class="line">            workBook.SaveAs(saveFileDialog.FileName);</span><br><span class="line">            workBook.Close(false);</span><br><span class="line">            excelApp.Quit();</span><br><span class="line"></span><br><span class="line">            System.Runtime.InteropServices.Marshal.ReleaseComObject(workSheet);</span><br><span class="line">            System.Runtime.InteropServices.Marshal.ReleaseComObject(workBook);</span><br><span class="line">            System.Runtime.InteropServices.Marshal.ReleaseComObject(excelApp);</span><br><span class="line"></span><br><span class="line">            workSheet = null;</span><br><span class="line">            workBook = null;</span><br><span class="line">            excelApp = null;</span><br><span class="line"></span><br><span class="line">            MessageBox.Show(&quot;Excel文件已保存到：&quot; + saveFileDialog.FileName);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(&quot;保存文件名称到Excel失败，请稍后重试。&quot; + ex.Message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，记录到这里，如有问题，欢迎大家联系我讨论。</p><p><img src="/images/%E4%BF%AE%E8%A1%8C.png" alt="修行"></p><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【乐知付加密平台】，您的网络资源可变现<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这里记录一下将winforms展示的datagridview，导出或保存为excel文件。&lt;/p&gt;</summary>
    
    
    
    <category term="客户端" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    
    <category term="windows" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/windows/"/>
    
    <category term="winforms" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/windows/winforms/"/>
    
    
    <category term="windows" scheme="https://chenzuoli.github.io/tags/windows/"/>
    
    <category term="winforms" scheme="https://chenzuoli.github.io/tags/winforms/"/>
    
    <category term="datagridview" scheme="https://chenzuoli.github.io/tags/datagridview/"/>
    
  </entry>
  
  <entry>
    <title>winforms基本操作-表格内容添加序号列</title>
    <link href="https://chenzuoli.github.io/2024/10/05/winforms%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E8%A1%A8%E6%A0%BC%E5%86%85%E5%AE%B9%E6%B7%BB%E5%8A%A0%E5%BA%8F%E5%8F%B7%E5%88%97/"/>
    <id>https://chenzuoli.github.io/2024/10/05/winforms%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E8%A1%A8%E6%A0%BC%E5%86%85%E5%AE%B9%E6%B7%BB%E5%8A%A0%E5%BA%8F%E5%8F%B7%E5%88%97/</id>
    <published>2024-10-05T08:26:42.000Z</published>
    <updated>2024-10-05T08:38:28.271Z</updated>
    
    <content type="html"><![CDATA[<p>添加序号列，需要给DataGridView对象添加【显示】事件。</p><p><img src="/2024/10/05/winforms%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E8%A1%A8%E6%A0%BC%E5%86%85%E5%AE%B9%E6%B7%BB%E5%8A%A0%E5%BA%8F%E5%8F%B7%E5%88%97/image-1.png" alt="jing"></p><span id="more"></span><p>表格对象属性【显示】中的CellPainting，添加事件dataGridView1_CellPainting，然后编辑cs文件，给事件添加序号逻辑，代码如下：<br><img src="/2024/10/05/winforms%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E8%A1%A8%E6%A0%BC%E5%86%85%E5%AE%B9%E6%B7%BB%E5%8A%A0%E5%BA%8F%E5%8F%B7%E5%88%97/image.png" alt="attr"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//注册事件 this.dataGridView1.CellPainting += new System.Windows.Forms.DataGridViewCellPaintingEventHandler(this.dataGridView1_CellPainting);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">private void dataGridView1_CellPainting(Object sender, DataGridViewCellPaintingEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    if (e.RowIndex &gt;= 0 &amp;&amp; e.ColumnIndex == -1)</span><br><span class="line">    &#123;</span><br><span class="line">        e.Paint(e.CellBounds, DataGridViewPaintParts.All &amp; ~DataGridViewPaintParts.ContentForeground);</span><br><span class="line">        using (Brush brush  = new SolidBrush(e.CellStyle.ForeColor))</span><br><span class="line">        &#123;</span><br><span class="line">            e.Graphics.DrawString((e.RowIndex + 1).ToString(), e.CellStyle.Font, brush, e.CellBounds.Location.X + 14, e.CellBounds.Location.Y + 8);</span><br><span class="line">        &#125;</span><br><span class="line">        e.Handled = true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>好了，记录到这里，如有问题，欢迎大家联系我讨论。</p><p><img src="/images/%E4%BF%AE%E8%A1%8C.png" alt="修行"></p><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【乐知付加密平台】，您的网络资源可变现<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;添加序号列，需要给DataGridView对象添加【显示】事件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2024/10/05/winforms%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-%E8%A1%A8%E6%A0%BC%E5%86%85%E5%AE%B9%E6%B7%BB%E5%8A%A0%E5%BA%8F%E5%8F%B7%E5%88%97/image-1.png&quot; alt=&quot;jing&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="客户端" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    
    <category term="windows" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/windows/"/>
    
    <category term="winforms" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/windows/winforms/"/>
    
    
    <category term="windows" scheme="https://chenzuoli.github.io/tags/windows/"/>
    
    <category term="winforms" scheme="https://chenzuoli.github.io/tags/winforms/"/>
    
    <category term="datagridview" scheme="https://chenzuoli.github.io/tags/datagridview/"/>
    
  </entry>
  
  <entry>
    <title>windows客户端框架选择</title>
    <link href="https://chenzuoli.github.io/2024/09/29/windows%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%A1%86%E6%9E%B6%E9%80%89%E6%8B%A9/"/>
    <id>https://chenzuoli.github.io/2024/09/29/windows%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%A1%86%E6%9E%B6%E9%80%89%E6%8B%A9/</id>
    <published>2024-09-29T14:01:54.000Z</published>
    <updated>2024-10-02T01:00:40.584Z</updated>
    
    <content type="html"><![CDATA[<p>开发windows客户端软件三大框架介绍，如何选择。</p><span id="more"></span><ol><li><p>winforms（Windows Forms）<br>最早的.net框架之一，用于构建windows桌面程序，简单易用，适合快速开发和小型项目。<br>传统的用户界面：<br><img src="/2024/09/29/windows%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%A1%86%E6%9E%B6%E9%80%89%E6%8B%A9/image.png" alt="winform"><br>推荐教程：<a href="https://learn.microsoft.com/en-us/visualstudio/ide/create-csharp-winform-visual-studio?toc=/visualstudio/get-started/csharp/toc.json&amp;bc=/visualstudio/get-started/csharp/breadcrumb/toc.json&amp;view=vs-2022">https://learn.microsoft.com/en-us/visualstudio/ide/create-csharp-winform-visual-studio?toc=%2Fvisualstudio%2Fget-started%2Fcsharp%2Ftoc.json&amp;bc=%2Fvisualstudio%2Fget-started%2Fcsharp%2Fbreadcrumb%2Ftoc.json&amp;view=vs-2022</a></p></li><li><p>wpf（Windows Presentation Foundation）<br>提供强大的图形处理能力和数据绑定功能，适合构建复杂的桌面应用程序。它使用xaml进行界面设计，支持2D和3D图形。<br>它提供拖拉拽方式设计界面，还有与数据库交互的基础功能，适用于大型项目。<br><img src="/2024/09/29/windows%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%A1%86%E6%9E%B6%E9%80%89%E6%8B%A9/image-2.png" alt="wpf"><br>推荐教程：<a href="https://www.tutorialspoint.com/wpf/index.htm">https://www.tutorialspoint.com/wpf/index.htm</a></p></li><li><p>winui（Windows UI Library）<br>microsoft最新的UI框架，基于UWP和win32，提供现代化的用户界面设计，它使用Fluent Design System，适合构建现代化的Windows应用。<br>最新的UI框架，界面美观，但是开发目前还比较繁琐。<br><img src="/2024/09/29/windows%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%A1%86%E6%9E%B6%E9%80%89%E6%8B%A9/image-1.png" alt="winui"></p></li></ol><p>好了，记录到这里，如有问题，欢迎大家联系我讨论。</p><p><img src="/images/%E4%BF%AE%E8%A1%8C.png" alt="修行"></p><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【乐知付加密平台】，您的网络资源可变现<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;开发windows客户端软件三大框架介绍，如何选择。&lt;/p&gt;</summary>
    
    
    
    <category term="客户端" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    
    <category term="windows" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/windows/"/>
    
    
    <category term="windows" scheme="https://chenzuoli.github.io/tags/windows/"/>
    
    <category term="winui" scheme="https://chenzuoli.github.io/tags/winui/"/>
    
    <category term="winforms" scheme="https://chenzuoli.github.io/tags/winforms/"/>
    
    <category term="wpf" scheme="https://chenzuoli.github.io/tags/wpf/"/>
    
  </entry>
  
  <entry>
    <title>windows开发打开文件夹</title>
    <link href="https://chenzuoli.github.io/2024/09/24/windows%E5%BC%80%E5%8F%91%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
    <id>https://chenzuoli.github.io/2024/09/24/windows%E5%BC%80%E5%8F%91%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E5%A4%B9/</id>
    <published>2024-09-24T14:09:16.000Z</published>
    <updated>2024-09-24T14:53:21.603Z</updated>
    
    <content type="html"><![CDATA[<p>看代码。</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FolderPicker folder = new FolderPicker();</span><br><span class="line">folder.SuggestedStartLocation = PickerLocationId.Desktop;</span><br><span class="line">folder.FileTypeFilter.Add(&quot;*&quot;);</span><br><span class="line"></span><br><span class="line">StorageFolder selectedFolder = await folder.PickSingleFolderAsync();</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">System.Runtime.InteropServices.COMException</span><br><span class="line">  HResult=0x80070578</span><br><span class="line">  Message=Invalid window handle. (0x80070578)</span><br><span class="line">Consider WindowNative, InitializeWithWindow</span><br><span class="line">See https://aka.ms/cswinrt/interop#windows-sdk</span><br><span class="line">  Source=HelloWorld</span><br><span class="line">  StackTrace:</span><br><span class="line">   at HelloWorld.MainWindow.&lt;SelectFolderButton_Click&gt;d__2.MoveNext() in E:\VisualStudioProjects\HelloWorld\HelloWorld\HelloWorld\MainWindow.xaml.cs:line 55</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>解决办法，初始化windows，具体原因不知道为啥，还需慢慢来了解：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var window = new Microsoft.UI.Xaml.Window();</span><br><span class="line">var hwnd = WinRT.Interop.WindowNative.GetWindowHandle(window);</span><br><span class="line">FolderPicker folder = new FolderPicker();</span><br><span class="line">folder.SuggestedStartLocation = PickerLocationId.Desktop;</span><br><span class="line">folder.FileTypeFilter.Add(&quot;*&quot;);</span><br><span class="line">WinRT.Interop.InitializeWithWindow.Initialize(folder, hwnd);</span><br><span class="line"></span><br><span class="line">StorageFolder selectedFolder = await folder.PickSingleFolderAsync();</span><br></pre></td></tr></table></figure><p>微软官方提供的解决方案：<br><a href="https://github.com/microsoft/CsWinRT/blob/master/docs/interop.md#windows-sdk">https://github.com/microsoft/CsWinRT/blob/master/docs/interop.md#windows-sdk</a></p><p>好了，记录到这里，持续更新中。</p><p>记录问题也是一种修行。</p><p><img src="/images/%E4%BF%AE%E8%A1%8C.png" alt="修行"></p><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【乐知付加密平台】，您的网络资源可变现<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;看代码。&lt;/p&gt;</summary>
    
    
    
    <category term="客户端" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    
    <category term="windows" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/windows/"/>
    
    <category term="winui" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/windows/winui/"/>
    
    
    <category term="windows" scheme="https://chenzuoli.github.io/tags/windows/"/>
    
    <category term="文件夹" scheme="https://chenzuoli.github.io/tags/%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
    
  </entry>
  
  <entry>
    <title>VisualStudio开发工具快捷键</title>
    <link href="https://chenzuoli.github.io/2024/09/24/VisualStudio%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://chenzuoli.github.io/2024/09/24/VisualStudio%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2024-09-24T13:35:17.000Z</published>
    <updated>2024-09-24T14:34:23.855Z</updated>
    
    <content type="html"><![CDATA[<p>快捷键记录。</p><span id="more"></span><ol><li><p>格式化代码：<br>快捷键Ctrl+K, Ctrl+D可以格式化整个文档，而Ctrl+K, Ctrl+F可以格式化选中的代码。</p></li><li><p>重复选择下一个单词：Ctrl+D，前提条件是你的键盘快捷键映射方案选择的是visual studio code方式，因为平时我使用vscode比较多，对它比较熟悉<br><img src="/2024/09/24/VisualStudio%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%BF%AB%E6%8D%B7%E9%94%AE/image.png" alt="key"></p></li><li><p>xaml注释<br>XaML注释：Ctrl+K;Ctrl+C</p></li></ol><p>好了，记录到这里，持续更新中。</p><p>记录问题也是一种修行。</p><p><img src="/images/%E4%BF%AE%E8%A1%8C.png" alt="修行"></p><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【乐知付加密平台】，您的网络资源可变现<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;快捷键记录。&lt;/p&gt;</summary>
    
    
    
    <category term="客户端" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    
    <category term="windows" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/windows/"/>
    
    <category term="visualstudio" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/windows/visualstudio/"/>
    
    
    <category term="windows" scheme="https://chenzuoli.github.io/tags/windows/"/>
    
    <category term="格式化" scheme="https://chenzuoli.github.io/tags/%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>博客园文章后缀</title>
    <link href="https://chenzuoli.github.io/2024/09/23/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E6%96%87%E7%AB%A0%E5%90%8E%E7%BC%80/"/>
    <id>https://chenzuoli.github.io/2024/09/23/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E6%96%87%E7%AB%A0%E5%90%8E%E7%BC%80/</id>
    <published>2024-09-23T13:46:49.000Z</published>
    <updated>2024-10-06T02:27:51.521Z</updated>
    
    <content type="html"><![CDATA[<p>1</p><span id="more"></span><p>记录问题也是一种修行。</p><p><img src="https://img2024.cnblogs.com/blog/1455070/202409/1455070-20240924224811849-2134953503.png" alt="修行"></p><hr><p>欢迎关注微信公众号，你的资源可变现：【乐知付加密平台】</p><img src="https://img2024.cnblogs.com/blog/1455070/202409/1455070-20240919212128860-1944218544.png" alt="乐知付加密平台" width="500" height="180"><p>欢迎关注微信公众号，这里记录博主的创业之旅：【程序员写书】</p><img src="https://img2024.cnblogs.com/blog/1455070/202409/1455070-20240919212147497-157482784.png" alt="程序员写书" width="500" height="180"><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;1&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="博客园" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/%E5%8D%9A%E5%AE%A2%E5%9B%AD/"/>
    
    
    <category term="博客园" scheme="https://chenzuoli.github.io/tags/%E5%8D%9A%E5%AE%A2%E5%9B%AD/"/>
    
  </entry>
  
  <entry>
    <title>记录第一次使用WinUI3运行HelloWorld的错误</title>
    <link href="https://chenzuoli.github.io/2024/09/22/%E8%AE%B0%E5%BD%95%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8WinUI3%E8%BF%90%E8%A1%8CHelloWorld%E7%9A%84%E9%94%99%E8%AF%AF/"/>
    <id>https://chenzuoli.github.io/2024/09/22/%E8%AE%B0%E5%BD%95%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8WinUI3%E8%BF%90%E8%A1%8CHelloWorld%E7%9A%84%E9%94%99%E8%AF%AF/</id>
    <published>2024-09-22T01:53:45.000Z</published>
    <updated>2024-09-23T13:37:32.650Z</updated>
    
    <content type="html"><![CDATA[<p>第一次开发windows客户端程序，搭建本地环境，按照官档搭建winui3环境，开发一个简单的点击时间界面。<br>这篇文章介绍一个错误，怎么解决，欢迎大家讨论。</p><span id="more"></span><h1 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h1><p>.net version: 8.0.401<br>visual studio 2022<br>windows 11</p><h1 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息"></a>错误信息</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">严重性代码说明项目文件行禁止显示状态</span><br><span class="line">错误(活动)This version of the Windows App SDK requires Microsoft.Windows.SDK.NET.Ref 10.0.19041.38 or later.</span><br><span class="line">    Please update to .NET SDK 6.0.134, 6.0.426, 8.0.109, 8.0.305 or 8.0.402 (or later).</span><br><span class="line">    Or add a temporary Microsoft.Windows.SDK.NET.Ref reference which can be added with:</span><br><span class="line">        &lt;PropertyGroup&gt;</span><br><span class="line">            &lt;WindowsSdkPackageVersion&gt;10.0.19041.38&lt;/WindowsSdkPackageVersion&gt;</span><br><span class="line">        &lt;/PropertyGroup&gt;</span><br><span class="line">HelloWorldC:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\buildTransitive\Microsoft.WindowsAppSDK.targets76</span><br><span class="line">错误(活动)CS1061“MainWindow”未包含“InitializeComponent”的定义，并且找不到可接受第一个“MainWindow”类型参数的可访问扩展方法“InitializeComponent”(是否缺少 using 指令或程序集引用?)HelloWorldE:\VisualStudioProjects\HelloWorld\HelloWorld\HelloWorld\MainWindow.xaml.cs28</span><br><span class="line">错误(活动)CS0103当前上下文中不存在名称“myButton”HelloWorldE:\VisualStudioProjects\HelloWorld\HelloWorld\HelloWorld\MainWindow.xaml.cs33</span><br><span class="line">警告(活动)MSB3277发现无法解析的“WinRT.Runtime”的不同版本之间存在冲突。</span><br><span class="line">“WinRT.Runtime, Version=2.0.0.0, Culture=neutral, PublicKeyToken=99ea127f02d97709”与“WinRT.Runtime, Version=2.1.0.0, Culture=neutral, PublicKeyToken=99ea127f02d97709”之间存在冲突。</span><br><span class="line">    已选择“WinRT.Runtime, Version=2.0.0.0, Culture=neutral, PublicKeyToken=99ea127f02d97709”，因为它是主版本而“WinRT.Runtime, Version=2.1.0.0, Culture=neutral, PublicKeyToken=99ea127f02d97709”不是。</span><br><span class="line">    依赖于“WinRT.Runtime, Version=2.0.0.0, Culture=neutral, PublicKeyToken=99ea127f02d97709”[C:\Users\Administrator\.nuget\packages\microsoft.windows.sdk.net.ref\10.0.19041.34\lib\net6.0\WinRT.Runtime.dll]的引用。</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windows.sdk.net.ref\10.0.19041.34\lib\net6.0\WinRT.Runtime.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windows.sdk.net.ref\10.0.19041.34\lib\net6.0\WinRT.Runtime.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windows.sdk.net.ref\10.0.19041.34\lib/net6.0/WinRT.Runtime.dll</span><br><span class="line">    依赖于或已统一到“WinRT.Runtime, Version=2.1.0.0, Culture=neutral, PublicKeyToken=99ea127f02d97709”[] 的引用。</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.web.webview2\1.0.2651.64\lib_manual\net6.0-windows10.0.17763.0\Microsoft.Web.WebView2.Core.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.web.webview2\1.0.2651.64\lib_manual\net6.0-windows10.0.17763.0\Microsoft.Web.WebView2.Core.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.web.webview2\1.0.2651.64\build\..\\lib_manual\net6.0-windows10.0.17763.0\Microsoft.Web.WebView2.Core.Projection.dll</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.WinUI.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.InteractiveExperiences.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.InteractiveExperiences.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.InteractiveExperiences.Projection.dll</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.WinUI.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.WinUI.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.WinUI.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.WinUI.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.AppLifecycle.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.AppLifecycle.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.AppLifecycle.Projection.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.AppNotifications.Builder.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.AppNotifications.Builder.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.AppNotifications.Builder.Projection.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.AppNotifications.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.AppNotifications.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.AppNotifications.Projection.dll</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.AppNotifications.Builder.Projection.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.ApplicationModel.DynamicDependency.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.ApplicationModel.DynamicDependency.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.ApplicationModel.DynamicDependency.Projection.dll</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Management.Deployment.Projection.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.ApplicationModel.Resources.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.ApplicationModel.Resources.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.ApplicationModel.Resources.Projection.dll</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.WinUI.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.ApplicationModel.WindowsAppRuntime.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.ApplicationModel.WindowsAppRuntime.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.ApplicationModel.WindowsAppRuntime.Projection.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Management.Deployment.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Management.Deployment.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Management.Deployment.Projection.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.PushNotifications.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.PushNotifications.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.PushNotifications.Projection.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Security.AccessControl.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Security.AccessControl.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Security.AccessControl.Projection.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Storage.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Storage.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Storage.Projection.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.System.Power.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.System.Power.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.System.Power.Projection.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.System.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.System.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.System.Projection.dll</span><br><span class="line">        C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Widgets.Projection.dll</span><br><span class="line">          导致引用“C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Widgets.Projection.dll”的项目文件项 Include 特性。</span><br><span class="line">            C:\Users\Administrator\.nuget\packages\microsoft.windowsappsdk\1.6.240829007\lib\net6.0-windows10.0.18362.0\Microsoft.Windows.Widgets.Projection.dllHelloWorldD:\VisualStudio\VisualStudioIDE\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets2412</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>根据错误日志堆栈信息，提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">错误(活动)This version of the Windows App SDK requires Microsoft.Windows.SDK.NET.Ref 10.0.19041.38 or later.</span><br><span class="line">    Please update to .NET SDK 6.0.134, 6.0.426, 8.0.109, 8.0.305 or 8.0.402 (or later).</span><br><span class="line">    Or add a temporary Microsoft.Windows.SDK.NET.Ref reference which can be added with:</span><br><span class="line">        &lt;PropertyGroup&gt;</span><br><span class="line">            &lt;WindowsSdkPackageVersion&gt;10.0.19041.38&lt;/WindowsSdkPackageVersion&gt;</span><br><span class="line">        &lt;/PropertyGroup&gt;</span><br></pre></td></tr></table></figure><p>我们修改项目的依赖windows sdk版本为10.0.19041.38<br>位置：</p><ol><li>切换到【解决方案资源管理器】</li><li>双击查看项目依赖配置文件<br><img src="/2024/09/22/%E8%AE%B0%E5%BD%95%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8WinUI3%E8%BF%90%E8%A1%8CHelloWorld%E7%9A%84%E9%94%99%E8%AF%AF/image.png" alt="info"></li></ol><p>添加windows sdk版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;PropertyGroup&gt;</span><br><span class="line">    &lt;WindowsSdkPackageVersion&gt;10.0.19041.38&lt;/WindowsSdkPackageVersion&gt;</span><br><span class="line">&lt;/PropertyGroup&gt;</span><br></pre></td></tr></table></figure><p>好了，记录到这里，如有问题，欢迎大家联系我讨论。</p><p><img src="/images/%E4%BF%AE%E8%A1%8C.png" alt="修行"></p><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【乐知付加密平台】，您的网络资源可变现<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;第一次开发windows客户端程序，搭建本地环境，按照官档搭建winui3环境，开发一个简单的点击时间界面。&lt;br&gt;这篇文章介绍一个错误，怎么解决，欢迎大家讨论。&lt;/p&gt;</summary>
    
    
    
    <category term="客户端" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    
    <category term="windows" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/windows/"/>
    
    <category term="winui" scheme="https://chenzuoli.github.io/categories/%E5%AE%A2%E6%88%B7%E7%AB%AF/windows/winui/"/>
    
    
    <category term="windows" scheme="https://chenzuoli.github.io/tags/windows/"/>
    
    <category term="dotnet" scheme="https://chenzuoli.github.io/tags/dotnet/"/>
    
    <category term="c#" scheme="https://chenzuoli.github.io/tags/c/"/>
    
    <category term="winui" scheme="https://chenzuoli.github.io/tags/winui/"/>
    
  </entry>
  
  <entry>
    <title>多进程环境同时操作时如何互斥操作</title>
    <link href="https://chenzuoli.github.io/2024/07/28/%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%8E%AF%E5%A2%83%E5%90%8C%E6%97%B6%E6%93%8D%E4%BD%9C%E6%97%B6%E5%A6%82%E4%BD%95%E4%BA%92%E6%96%A5%E6%93%8D%E4%BD%9C/"/>
    <id>https://chenzuoli.github.io/2024/07/28/%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%8E%AF%E5%A2%83%E5%90%8C%E6%97%B6%E6%93%8D%E4%BD%9C%E6%97%B6%E5%A6%82%E4%BD%95%E4%BA%92%E6%96%A5%E6%93%8D%E4%BD%9C/</id>
    <published>2024-07-28T01:38:00.000Z</published>
    <updated>2024-07-28T01:44:37.477Z</updated>
    
    <content type="html"><![CDATA[<p>在 Python 中，<code>fcntl</code> 模块提供了对文件控制操作的接口，包括文件锁定。<code>fcntl.flock()</code> 函数用于对文件进行锁定，以确保在多进程环境中对文件的访问是互斥的。</p><span id="more"></span><p>函数 <code>fcntl.flock(f, operation)</code> 中的参数解释如下：</p><ul><li><code>f</code> 是一个文件描述符，即打开文件后返回的文件对象的 <code>fileno()</code> 方法的结果。</li><li><code>operation</code> 是锁定操作的类型，可以是以下几种组合：<ul><li><code>fcntl.LOCK_EX</code>：表示排他锁定（exclusive lock），同一时间只能有一个进程可以对文件进行写操作。</li><li><code>fcntl.LOCK_SH</code>：表示共享锁定（shared lock），多个进程可以同时对文件进行读操作。</li><li><code>fcntl.LOCK_NB</code>：表示非阻塞模式，如果锁定不能立即获得，函数会立即返回而不是等待。</li></ul></li></ul><p>在你提供的代码片段 <code>fcntl.flock(f, fcntl.LOCK_EX | fcntl.LOCK_NB)</code> 中，<code>fcntl.LOCK_EX</code> 表示尝试获取一个排他锁定，<code>fcntl.LOCK_NB</code> 表示如果锁定不能立即获得，则不会阻塞当前进程，函数会立即返回。</p><p>如果该调用成功，表示当前进程已经获得了排他锁定，可以安全地对文件进行写操作。如果调用失败（例如因为文件已经被其他进程锁定），则表示当前进程未能获得锁定，可以进行错误处理或重试逻辑。</p><p>请注意，使用文件锁定时，需要确保在完成文件操作后释放锁定，即使在发生异常的情况下也应该如此。可以通过调用 <code>fcntl.flock(f, fcntl.LOCK_UN)</code> 来释放锁定，其中 <code>fcntl.LOCK_UN</code> 表示解锁操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import fcntl</span><br><span class="line">import atexit</span><br><span class="line"></span><br><span class="line">f = open(&quot;scheduler.lock&quot;, &quot;wb&quot;)</span><br><span class="line"># noinspection PyBroadException</span><br><span class="line">try:</span><br><span class="line">    fcntl.flock(f, fcntl.LOCK_EX | fcntl.LOCK_NB)</span><br><span class="line">    # 这里是对文件或者其他资源的写操作，不用担心其他进程会有写操作</span><br><span class="line">except:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def unlock():</span><br><span class="line">    fcntl.flock(f, fcntl.LOCK_UN)</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line">atexit.register(unlock)</span><br></pre></td></tr></table></figure><p>我的使用场景就是，使用flask启动apscheduler调度器时，wsgi指定了多个worker，导致定时任务运行多次，这里限制了单个worker启动scheduler，可以解决这个问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gunicorn --workers 3 --bind 0.0.0.0:5000  --access-logfile access.log --error-logfile error.log --access-logformat  &quot;&#123;&#x27;remote_ip&#x27;:&#x27;%(h)s&#x27;,&#x27;request_id&#x27;:&#x27;%(&#123;X-Request-Id&#125;i)s&#x27;,&#x27;response_code&#x27;:&#x27;%(s)s&#x27;,&#x27;request_method&#x27;:&#x27;%(m)s&#x27;,&#x27;request_path&#x27;:&#x27;%(U)s&#x27;,&#x27;request_querystring&#x27;:&#x27;%(q)s&#x27;,&#x27;request_timetaken&#x27;:&#x27;%(D)s&#x27;,&#x27;response_length&#x27;:&#x27;%(B)s&#x27;&#125;&quot; --log-level info   --daemon   wsgi:app</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【程序员写书】<br><img src="/images/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%86%99%E4%B9%A6%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BA%8C%E7%BB%B4%E7%A0%81.jpg" alt="程序员写书"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 Python 中，&lt;code&gt;fcntl&lt;/code&gt; 模块提供了对文件控制操作的接口，包括文件锁定。&lt;code&gt;fcntl.flock()&lt;/code&gt; 函数用于对文件进行锁定，以确保在多进程环境中对文件的访问是互斥的。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://chenzuoli.github.io/categories/Python/"/>
    
    <category term="多进程" scheme="https://chenzuoli.github.io/categories/Python/%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    
    
    <category term="python" scheme="https://chenzuoli.github.io/tags/python/"/>
    
    <category term="互斥" scheme="https://chenzuoli.github.io/tags/%E4%BA%92%E6%96%A5/"/>
    
  </entry>
  
  <entry>
    <title>单机环境下解决wsgiserver启动apscheduler运行多次问题</title>
    <link href="https://chenzuoli.github.io/2024/07/22/%E5%8D%95%E6%9C%BA%E7%8E%AF%E5%A2%83%E4%B8%8B%E8%A7%A3%E5%86%B3wsgiserver%E5%90%AF%E5%8A%A8apscheduler%E8%BF%90%E8%A1%8C%E5%A4%9A%E6%AC%A1%E9%97%AE%E9%A2%98/"/>
    <id>https://chenzuoli.github.io/2024/07/22/%E5%8D%95%E6%9C%BA%E7%8E%AF%E5%A2%83%E4%B8%8B%E8%A7%A3%E5%86%B3wsgiserver%E5%90%AF%E5%8A%A8apscheduler%E8%BF%90%E8%A1%8C%E5%A4%9A%E6%AC%A1%E9%97%AE%E9%A2%98/</id>
    <published>2024-07-22T13:35:34.000Z</published>
    <updated>2024-07-22T14:31:42.640Z</updated>
    
    <content type="html"><![CDATA[<p>启动脚本中这样设置，多个worker启动apscheduler调度器的时候，去判断lock文件是否存在，存在则不启动，保证了多worker之间只启动了一个调度器。</p><span id="more"></span><p>fcntl  atexit 这俩包只在类unix系统中存在，如果你想在windows中运行，则不行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import fcntl</span><br><span class="line">import atexit</span><br><span class="line"></span><br><span class="line">def register_scheduler():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    注册定时任务</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    f = open(&quot;scheduler.lock&quot;, &quot;wb&quot;)</span><br><span class="line">    # noinspection PyBroadException</span><br><span class="line">    try:</span><br><span class="line">        fcntl.flock(f, fcntl.LOCK_EX | fcntl.LOCK_NB)</span><br><span class="line">        scheduler.start()</span><br><span class="line">    except:</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def unlock():</span><br><span class="line">        fcntl.flock(f, fcntl.LOCK_UN)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line">    atexit.register(unlock)</span><br><span class="line"></span><br><span class="line">register_scheduler()</span><br></pre></td></tr></table></figure><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【程序员写书】<br><img src="/images/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%86%99%E4%B9%A6%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BA%8C%E7%BB%B4%E7%A0%81.jpg" alt="程序员写书"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;启动脚本中这样设置，多个worker启动apscheduler调度器的时候，去判断lock文件是否存在，存在则不启动，保证了多worker之间只启动了一个调度器。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://chenzuoli.github.io/categories/Python/"/>
    
    <category term="Flask" scheme="https://chenzuoli.github.io/categories/Python/Flask/"/>
    
    <category term="Apscheduler" scheme="https://chenzuoli.github.io/categories/Python/Flask/Apscheduler/"/>
    
    
    <category term="flask" scheme="https://chenzuoli.github.io/tags/flask/"/>
    
    <category term="apscheduler" scheme="https://chenzuoli.github.io/tags/apscheduler/"/>
    
  </entry>
  
  <entry>
    <title>jinja2基本使用</title>
    <link href="https://chenzuoli.github.io/2024/07/20/jinja2%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>https://chenzuoli.github.io/2024/07/20/jinja2%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2024-07-20T03:58:57.000Z</published>
    <updated>2024-07-20T12:42:01.369Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录一些jinja2的用法。</p><span id="more"></span><p>格式化数字到2位小数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; &#x27;&#123;0:0.2f&#125;&#x27;.format(amount) &#125;&#125;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; &quot;%.2f&quot; | format(amount) &#125;&#125;</span><br></pre></td></tr></table></figure><p>格式化日期：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; somedate.strftime(&#x27;%Y-%m-%d&#x27;) &#125;&#125;</span><br></pre></td></tr></table></figure><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【程序员写书】<br><img src="/images/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%86%99%E4%B9%A6%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BA%8C%E7%BB%B4%E7%A0%81.jpg" alt="程序员写书"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这里记录一些jinja2的用法。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://chenzuoli.github.io/categories/Python/"/>
    
    <category term="Jinja2" scheme="https://chenzuoli.github.io/categories/Python/Jinja2/"/>
    
    
    <category term="python" scheme="https://chenzuoli.github.io/tags/python/"/>
    
    <category term="jinja2" scheme="https://chenzuoli.github.io/tags/jinja2/"/>
    
  </entry>
  
  <entry>
    <title>相机怎么选</title>
    <link href="https://chenzuoli.github.io/2024/07/07/%E7%9B%B8%E6%9C%BA%E6%80%8E%E4%B9%88%E9%80%89/"/>
    <id>https://chenzuoli.github.io/2024/07/07/%E7%9B%B8%E6%9C%BA%E6%80%8E%E4%B9%88%E9%80%89/</id>
    <published>2024-07-07T08:10:31.000Z</published>
    <updated>2024-07-07T08:13:04.311Z</updated>
    
    <content type="html"><![CDATA[<p>最近准备购买，相机怎么选，我去搜索了许多文章，整理了一篇小白挑选技术篇，供大家参考。</p><span id="more"></span><h1 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h1><h4 id="胶片相机"><a href="#胶片相机" class="headerlink" title="胶片相机"></a>胶片相机</h4><p>需要装入胶卷才能使用的相机，拍照后可直接取出照片<br><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/27162171/1720333436977-b251f093-b125-4588-a583-8f0de152779b.jpeg#averageHue=%23cfcfcc&clientId=uce120f0a-e8a3-4&from=paste&id=u32e24d17&originHeight=800&originWidth=1200&originalType=url&ratio=1.4973957538604736&rotation=0&showTitle=false&status=done&style=none&taskId=u674ce240-4c22-4c6f-bae1-a0dd289ed7d&title="></p><h4 id="数码相机"><a href="#数码相机" class="headerlink" title="数码相机"></a>数码相机</h4><p>照片以文件形式存储在储存卡上</p><ol><li>单反相机</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2024/png/27162171/1720333479104-840b5968-5edb-47bb-97d8-e52440e41272.png#averageHue=%231d1e21&clientId=uce120f0a-e8a3-4&from=paste&height=368&id=ua1aabe48&originHeight=640&originWidth=640&originalType=url&ratio=1.4973957538604736&rotation=0&showTitle=false&size=421803&status=done&style=none&taskId=ub24c67b7-b986-4171-86ad-d3f3176fccd&title=&width=367.99652099609375" alt="image.png"></p><ol start="2"><li>无反相机（微单）</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2024/png/27162171/1720333547941-a3eb39fe-5443-4ce2-948f-cb2e756e5ab5.png#averageHue=%23363831&clientId=uce120f0a-e8a3-4&from=paste&height=220&id=uafe82702&originHeight=426&originWidth=640&originalType=url&ratio=1.4973957538604736&rotation=0&showTitle=false&size=222257&status=done&style=none&taskId=u1b4626ab-ca10-46fe-aacb-d661f39401d&title=&width=330.98785400390625" alt="image.png"></p><ol start="3"><li>卡片机</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2024/png/27162171/1720333672541-188fa5d5-76f8-4991-bf1a-a2ff792cf06e.png#averageHue=%23acc6b8&clientId=uce120f0a-e8a3-4&from=paste&height=323&id=u6c3ce669&originHeight=701&originWidth=1029&originalType=binary&ratio=1.4973957538604736&rotation=0&showTitle=false&size=626048&status=done&style=none&taskId=uf668bb6f-0c49-4f01-a6b3-c4f2372a49c&title=&width=474.19305419921875" alt="image.png"></p><ol start="4"><li>运动相机</li></ol><p>拍摄运动场景<br><img src="https://cdn.nlark.com/yuque/0/2024/png/27162171/1720333739675-2c5992ba-3826-4059-b3a3-40fdbf01aa34.png#averageHue=%2369675c&clientId=uce120f0a-e8a3-4&from=paste&height=316&id=uf39cc294&originHeight=2000&originWidth=3000&originalType=url&ratio=1.4973957538604736&rotation=0&showTitle=false&size=7071810&status=done&style=none&taskId=ue2f97a38-c26b-4bbd-9186-e1b6737e425&title=&width=473.6522216796875" alt="image.png"></p><p>区别：</p><ol><li>单反有反光镜，微单无反光镜</li><li>单反体积大，微单体积小些，微单轻薄小巧便携</li></ol><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><h3 id="景深："><a href="#景深：" class="headerlink" title="景深："></a>景深：</h3><p>景深（Depth of Field，简称DoF）是摄影术语，指的是在聚焦平面前后一定范围内的物体都能被相对清晰地呈现在照片上的区域。换句话说，景深是指照片中看起来“锐利”或“清晰”的区域的深度。<br>景深的大小受以下几个因素影响：</p><ol><li><strong>光圈大小</strong>：光圈越小（f数值越大），景深越深；光圈越大（f数值越小），景深越浅。因此，通过调整光圈可以控制景深。</li><li><strong>焦距</strong>：焦距越长，景深越浅；焦距越短，景深越深。长焦镜头更容易产生浅景深效果，常用于人像摄影，使背景模糊。</li><li><strong>拍摄距离</strong>：相机与被摄物体的距离也会影响景深。距离越近，景深越浅；距离越远，景深越深。</li><li><strong>传感器尺寸</strong>：在相同条件下，全画幅相机比半画幅相机通常有更浅的景深。</li></ol><p>浅景深的效果可以使被摄主体与背景分离，突出主体，常用于人像和微距摄影。而深景深则可以使画面中的前景和背景都保持清晰，适用于风景摄影、建筑摄影等需要展现广阔场景的拍摄。</p><h3 id="画幅："><a href="#画幅：" class="headerlink" title="画幅："></a>画幅：</h3><p>画幅（Image Format或Sensor Size）是指相机图像传感器的尺寸，即传感器能够捕捉图像的区域大小。画幅的大小直接影响到相机的视角、景深、曝光等因素。以下是一些常见的画幅类型：</p><ol><li><strong>全画幅（Full-Frame）</strong>：全画幅传感器的尺寸大约为36mm×24mm，与35mm胶片相机的底片尺寸相同。全画幅相机提供较大的传感器面积，通常能够提供更好的低光性能和更浅的景深。</li><li><strong>APS-C画幅</strong>：APS-C是“Advanced Photo System type-C”的缩写，是一种常见的半画幅传感器尺寸，尺寸大约在22.2mm×14.8mm到28.7mm×19.1mm之间，不同品牌略有差异。APS-C画幅相机通常比全画幅相机更轻便，成本也较低。</li><li><strong>四分之三画幅（Micro Four Thirds, MFT）</strong>：这种画幅的尺寸大约为17.3mm×13mm，由奥林巴斯和松下共同开发。MFT系统以其较小的尺寸和轻量级而受到欢迎，适合旅行和日常携带。</li><li><strong>中画幅（Medium Format）</strong>：中画幅传感器的尺寸远大于全画幅，通常在44mm×33mm以上，能够提供极高的图像质量和细节。中画幅相机常用于专业领域的高质量摄影，如时尚摄影、广告摄影等。</li><li><strong>小画幅（如1英寸传感器）</strong>：这种画幅的尺寸较小，常见于高端紧凑型相机或一些长焦相机。虽然画幅较小，但技术进步使得这类相机也能提供不错的图像质量。</li></ol><p>画幅的选择取决于摄影师的需求和预算。全画幅和中画幅相机通常提供更高的图像质量，但价格较高，体积和重量也较大。APS-C和MFT等较小画幅的相机则在便携性和成本效益方面具有优势。</p><h1 id="选购"><a href="#选购" class="headerlink" title="选购"></a>选购</h1><p>相机核心组件：感光元件+镜头</p><h4 id="感光元件"><a href="#感光元件" class="headerlink" title="感光元件"></a>感光元件</h4><p>代表画质，即画幅，相机的画幅是划分相机（机身）档次的主要参数，<br>底越大，画质越好（容纳像素更多，暗处噪点更少），虚化效果也越好，价格也越贵。</p><ol><li><strong>全画幅</strong>（36*24mm&#x2F;是传统135相机胶卷尺寸在数码相机上的引用）大小为基准</li><li><strong>半画幅（APS-C画幅或是残画幅）</strong>是全画幅对角线除以1.5</li><li><strong>M43画幅</strong>则是全画幅对角线除以2</li><li><strong>卡片机的画幅</strong>常用1英寸</li><li><strong>手机</strong>普遍是1&#x2F;2~1英寸</li><li>*<strong>中画幅</strong>传感器尺寸比全画幅更大</li></ol><p><strong>全画幅与半画幅</strong><br>全画幅（Full-Frame）和半画幅（APS-C）相机是两种常见的相机类型，它们之间的主要区别在于图像传感器的尺寸。以下是全画幅与半画幅相机的一些主要区别以及选择时可以考虑的因素：</p><ol><li><strong>传感器尺寸</strong>：全画幅相机的传感器尺寸通常为36mm×24mm，与35mm胶片相同，而半画幅（最常见的APS-C格式）的尺寸较小，例如尼康和佳能的APS-C尺寸大约为22.7mm×15.5mm。</li><li><strong>视角和焦距转换</strong>：由于传感器尺寸的差异，相同焦距的镜头在半画幅相机上的视角会更窄，相当于全画幅相机的1.5倍或1.6倍（取决于品牌）。这意味着半画幅相机在拍摄远距离物体时会有更长的等效焦距。</li><li><strong>景深</strong>：全画幅相机通常能够提供更浅的景深，使背景更加模糊，这在人像摄影中是一个优势。</li><li><strong>低光性能和高ISO表现</strong>：全画幅相机由于较大的像素尺寸，通常在高ISO设置下表现更好，提供更少的噪点和更好的图像质量。</li><li><strong>价格和体积</strong>：全画幅相机通常价格更高，体积和重量也更大，而半画幅相机则相对便宜和轻便。</li><li><strong>镜头选择</strong>：全画幅相机可以使用专为全画幅设计的镜头，而半画幅相机则需要考虑镜头的等效焦距。一些镜头可能专为半画幅相机设计，以提供更好的性能和价格比。</li></ol><p>选择时可以考虑的因素：</p><ul><li><strong>预算</strong>：全画幅相机和镜头通常更昂贵。</li><li><strong>拍摄类型</strong>：如果需要拍摄需要浅景深的人像或在低光环境下拍摄，全画幅可能是更好的选择。如果拍摄类型不需要这些特性，半画幅可能足够用。</li><li><strong>便携性</strong>：如果需要轻便的设备，半画幅相机可能更合适。</li><li><strong>镜头生态系统</strong>：考虑相机品牌和可用镜头的范围，以及它们对全画幅或半画幅的优化。</li><li><strong>技术需求</strong>：如果你需要最高的图像质量和技术性能，全画幅可能是更好的选择。</li></ul><h4 id="镜头焦距"><a href="#镜头焦距" class="headerlink" title="镜头焦距"></a>镜头焦距</h4><p>镜头的焦距，代表取景范围，距离越远，能拍到的视野范围越小<br><img src="https://cdn.nlark.com/yuque/0/2024/webp/27162171/1720334061536-e44af6a5-495c-46bb-908b-cdce3ee22caa.webp#averageHue=%23ebeaea&clientId=uce120f0a-e8a3-4&from=paste&height=548&id=uc84d9da8&originHeight=987&originWidth=620&originalType=url&ratio=1.4973957538604736&rotation=0&showTitle=false&status=done&style=none&taskId=uade4756c-f8b8-4690-b32c-7192a6c7b0c&title=&width=343.9826354980469"><br>50mm通常被认为是标准镜头，和人眼接近。<br>35mm以下，广角镜头，<br>70mm往上，中&#x2F;中长&#x2F;长焦镜头</p><h4 id="镜头光圈"><a href="#镜头光圈" class="headerlink" title="镜头光圈"></a>镜头光圈</h4><p>光圈控制进光量和景深。<br>进光量和画面亮度有关，景深和画面清晰范围有关。<br>f后面的数字越小，光圈越大，进光量越大，画面越亮，景深越浅，清晰范围越小；<br>f后面的数字越大，光圈越小，进光量越少，画面越暗，景深越深，清晰范围越大。</p><h4 id="镜头分类"><a href="#镜头分类" class="headerlink" title="镜头分类"></a>镜头分类</h4><p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/27162171/1720337457605-331955e5-f915-4e7c-ad38-b6814da96968.jpeg#averageHue=%235e5c57&clientId=u633584bb-7a8c-4&from=paste&id=ue3c507aa&originHeight=800&originWidth=1199&originalType=url&ratio=1.4973957538604736&rotation=0&showTitle=false&status=done&style=none&taskId=u54b9d680-c799-4e0c-9bb1-2751db188eb&title="><br>相机镜头根据焦距、光圈、用途和设计可以分为多种类型，每种镜头都有其独特的特点和适用场景。以下是一些常见的镜头分类及其特点：</p><ol><li><strong>定焦镜头（Prime Lens）</strong>：<ul><li>固定焦距，无法变焦。</li><li>通常提供较大的光圈，有利于低光环境下拍摄和产生浅景深效果。</li><li>体积较小，重量轻，便于携带。</li></ul></li><li><strong>变焦镜头（Zoom Lens）</strong>：<ul><li>可以调整焦距，覆盖一定范围的视角。</li><li>提供拍摄灵活性，适合旅行和日常拍摄。</li><li>通常光圈较小，可能不如定焦镜头在低光环境下表现好。</li></ul></li><li><strong>广角镜头（Wide-Angle Lens）</strong>：<ul><li>短焦距，视角宽广。</li><li>适合风景摄影、建筑摄影和室内摄影。</li><li>可以增加画面的深度感和空间感。</li></ul></li><li><strong>超广角镜头（Ultra-Wide Lens）</strong>：<ul><li>比广角镜头更短的焦距，提供极广的视角。</li><li>适合星空摄影、建筑摄影或创造独特的视角效果。</li></ul></li><li><strong>标准镜头（Standard Lens）</strong>：<ul><li>焦距接近人眼所见，通常在50mm左右。</li><li>提供自然的视角和透视效果，适合人像和日常拍摄。</li></ul></li><li><strong>长焦镜头（Telephoto Lens）</strong>：<ul><li>长焦距，可以拉近远处的物体。</li><li>适合运动摄影、野生动物摄影和远距离拍摄。</li><li>通常较重，需要三脚架支撑。</li></ul></li><li><strong>超远摄镜头（Super-Telephoto Lens）</strong>：<ul><li>超长焦距，用于捕捉极远距离的物体。</li><li>常用于体育赛事、野生动物和天文摄影。</li></ul></li><li><strong>微距镜头（Macro Lens）</strong>：<ul><li>专为近距离拍摄设计，能够以1:1或更高比例的放大率拍摄。</li><li>适合拍摄昆虫、花朵和其他小物体的细节。</li></ul></li><li><strong>鱼眼镜头（Fisheye Lens）</strong>：<ul><li>提供极端的广角视角，通常接近或超过180度。</li><li>产生独特的弯曲透视效果，适合创意摄影。</li></ul></li><li><strong>移轴镜头（Tilt-Shift Lens）</strong>：</li></ol><ul><li>允许调整视角和焦点平面，常用于建筑摄影以减少透视失真。</li><li>也用于创造特殊的景深效果。</li></ul><ol start="11"><li><strong>折返镜头（Reflector Lens）</strong>：</li></ol><ul><li>使用反射镜来形成较短的焦距和较大的光圈。</li><li>适合长焦距和低光环境，但可能存在一些光学限制。</li></ul><ol start="12"><li><strong>增距镜（Teleconverter）</strong>：</li></ol><ul><li>附加在镜头和相机之间，增加镜头的焦距。</li><li>可以延长长焦镜头的拍摄距离，但可能降低光圈和图像质量。</li></ul><h4 id="品牌"><a href="#品牌" class="headerlink" title="品牌"></a>品牌</h4><p>以下品牌值得信赖：</p><ol><li>佳能</li><li>索尼</li><li>尼康</li><li>富士</li><li>松下</li></ol><h4 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h4><p>参考以下参数指标：</p><ol><li>像素，专业高清的话，2400万以上像素</li><li>画幅，全画幅，背景更加模糊，更适合人像，及远距离拍摄；半画幅，轻便，价格稍低些</li><li>拍照片，单反更专业，拍视频，无反更擅长</li><li>预算低，且小白，推荐无反相机</li></ol><h4 id="配件"><a href="#配件" class="headerlink" title="配件"></a>配件</h4><ol><li>镜头</li><li>三脚架</li><li>相机包</li><li>滤镜</li><li>闪光灯</li><li>电池和充电器</li><li>存储卡</li><li>清洁工具</li><li>遥控器或快门线</li><li>镜头盖、遮光罩</li><li>保护套</li></ol><hr><p>记录一下。</p><p>欢迎关注微信公众号，您的资源可变现：【乐知付加密平台】<br><br><br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近准备购买，相机怎么选，我去搜索了许多文章，整理了一篇小白挑选技术篇，供大家参考。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="相机" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/%E7%9B%B8%E6%9C%BA/"/>
    
    
    <category term="相机" scheme="https://chenzuoli.github.io/tags/%E7%9B%B8%E6%9C%BA/"/>
    
    <category term="单反相机" scheme="https://chenzuoli.github.io/tags/%E5%8D%95%E5%8F%8D%E7%9B%B8%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>软件分享-Navicat数据库查询工具</title>
    <link href="https://chenzuoli.github.io/2024/07/06/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB-Navicat%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/"/>
    <id>https://chenzuoli.github.io/2024/07/06/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB-Navicat%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/</id>
    <published>2024-07-06T08:10:03.000Z</published>
    <updated>2024-07-06T08:34:53.184Z</updated>
    
    <content type="html"><![CDATA[<p>这里分享下免费软件，不需要激活，可破解Navicat Premium，支持mysql pg oracle 等数据库。</p><span id="more"></span><p>关注公众号【乐知付加密平台】，回复消息：<b>navicat</b>，获取下载链接。</p><p>安装教程，看这里：<br><img src="/2024/07/06/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB-Navicat%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/image.png" alt="1"><br><img src="/2024/07/06/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB-Navicat%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/image-1.png" alt="2"></p><p>链接永久有效。</p><hr><p>欢迎关注微信公众号，你的资源可变现：【乐知付加密平台】<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这里分享下免费软件，不需要激活，可破解Navicat Premium，支持mysql pg oracle 等数据库。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="开发工具" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Navicat" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Navicat/"/>
    
    
    <category term="oracle" scheme="https://chenzuoli.github.io/tags/oracle/"/>
    
    <category term="postgresql" scheme="https://chenzuoli.github.io/tags/postgresql/"/>
    
    <category term="mysql" scheme="https://chenzuoli.github.io/tags/mysql/"/>
    
    <category term="navicat" scheme="https://chenzuoli.github.io/tags/navicat/"/>
    
  </entry>
  
  <entry>
    <title>2024组装一台能跑AI大模型的电脑</title>
    <link href="https://chenzuoli.github.io/2024/07/06/2024%E7%BB%84%E8%A3%85%E4%B8%80%E5%8F%B0%E8%83%BD%E8%B7%91AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84%E7%94%B5%E8%84%91/"/>
    <id>https://chenzuoli.github.io/2024/07/06/2024%E7%BB%84%E8%A3%85%E4%B8%80%E5%8F%B0%E8%83%BD%E8%B7%91AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84%E7%94%B5%E8%84%91/</id>
    <published>2024-07-06T00:35:49.000Z</published>
    <updated>2024-07-14T06:00:14.902Z</updated>
    
    <content type="html"><![CDATA[<p>这里不写组装步骤，哪里接线，购买什么品牌网上一大堆。<br>这里只写如何根据你自己的需求，选择合适的、兼容的配件。</p><span id="more"></span><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h2><ol><li>windows电脑</li><li>可跑AI大模型（大概12G显存）</li><li>2024年了，内存不能低于16G，不然跑10个左右的软件，就卡的不行了</li><li>预算再1w以内</li></ol><p>购买电脑需要如下几个重要配件，其他的鼠键、音响等可有可没有：</p><ol><li>cpu</li><li>显卡</li><li>内存</li><li>硬盘</li><li>主板</li><li>电源</li><li>机箱</li><li>cpu散热器</li><li>显示器</li></ol><p>一个个说：</p><h2 id="cpu"><a href="#cpu" class="headerlink" title="cpu"></a>cpu</h2><p>电脑跑的快不快，重要的是cpu快不快，cpu跑的快，主要靠核心数和线程数，这个你自己选吧<br>看参数插槽类型，是否跟主板兼容</p><h2 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h2><p>根据你的需求，预计需要使用多大显存来选择显卡，要跟主板兼容，兼容性参考PCIE参数<br>PCIE是高速宽带传统通道标准，是向下兼容的，即主板支持PCIE6.0，可使用PCIE5.0 4.0的显卡<br>目前技术发展到了PCIE6.0，PCIE4.0仍是主流，代表速度16G&#x2F;s</p><h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><p>现在国产内存是真的便宜，技术也相对成熟，无脑选<br>DDR代数跟主板兼容的代数保持一致，不然不兼容<br>DDR6代已上市，DDR5仍是主流</p><h2 id="硬盘"><a href="#硬盘" class="headerlink" title="硬盘"></a>硬盘</h2><p>硬盘技术也很成熟，无脑选<br>固态硬盘和机械硬盘，与主板兼容性，看接口类型即可</p><h2 id="主板"><a href="#主板" class="headerlink" title="主板"></a>主板</h2><p>主板选择，多看看，主要这几个参数：</p><ol><li>板型，e-atx atx m-atx，依次从大到小，注意跟电脑机箱匹配</li><li>cpu兼容性，支持的cpu类型</li><li>内存兼容性，DDR代数</li></ol><h2 id="机箱"><a href="#机箱" class="headerlink" title="机箱"></a>机箱</h2><p>机箱大小跟主板要兼容，一般比主板大一个型号，方便安装，不至于走线非常紧凑<br>如：主板选m-atx 机箱可选atx<br>就这</p><h2 id="电源"><a href="#电源" class="headerlink" title="电源"></a>电源</h2><p>电源也是很关键的一个配件，电源功率太低，cpu 显卡无法发挥他的最大功效，供电要足<br>大概根据其他配件消耗的功率计算以下：</p><ol><li>显卡耗电最高，看详情可找到耗电瓦数，一般在100W往上</li><li>cpu核心数越多，耗电量越大</li><li>cpu散热器功率也要计算进去</li><li>主板功率</li></ol><p>再加100W冗余功率即可。</p><h2 id="cpu散热器"><a href="#cpu散热器" class="headerlink" title="cpu散热器"></a>cpu散热器</h2><p>可选风冷水冷，保证cpu散热正常即可</p><h2 id="显示器"><a href="#显示器" class="headerlink" title="显示器"></a>显示器</h2><p>根据自己需求，选择大小、分辨率和刷新率</p><h1 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h1><p>电脑安装好之后，需要安装许多驱动程序，你可以下载一个可以安装各种驱动的软件，也可以直接去主板、显卡官网下载驱动，<br>大概需要安装的驱动有以下这些：</p><ol><li>网络驱动，有线网络使用</li><li>无线网络驱动，wifi网络使用</li><li>芯片组驱动，cpu使用</li><li>声卡驱动，音响使用</li><li>显示驱动，显示器使用</li><li>蓝牙驱动，支持蓝牙的主板可安装</li><li>sata驱动，机械硬盘使用</li></ol><p>这里列一下下载链接：<br>主板驱动：<a href="https://www.asus.com.cn/motherboards-components/motherboards/tuf-gaming/tuf-gaming-b760m-plus-wifi-ii/helpdesk_download?model2Name=TUF-GAMING-B760M-PLUS-WIFI-II">https://www.asus.com.cn/motherboards-components/motherboards/tuf-gaming/tuf-gaming-b760m-plus-wifi-ii/helpdesk_download?model2Name=TUF-GAMING-B760M-PLUS-WIFI-II</a></p><p>显卡驱动：<a href="https://www.nvidia.cn/geforce/drivers/">https://www.nvidia.cn/geforce/drivers/</a></p><p>就这，再见。</p><hr><p><b>书山有路勤为径，学海无涯苦作舟。</b></p><p>欢迎关注微信公众号：【程序员写书】<br><img src="/images/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%86%99%E4%B9%A6%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BA%8C%E7%BB%B4%E7%A0%81.jpg" alt="程序员写书"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这里不写组装步骤，哪里接线，购买什么品牌网上一大堆。&lt;br&gt;这里只写如何根据你自己的需求，选择合适的、兼容的配件。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="电脑" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/%E7%94%B5%E8%84%91/"/>
    
    <category term="windows" scheme="https://chenzuoli.github.io/categories/%E5%85%B6%E4%BB%96/%E7%94%B5%E8%84%91/windows/"/>
    
    
    <category term="组装电脑" scheme="https://chenzuoli.github.io/tags/%E7%BB%84%E8%A3%85%E7%94%B5%E8%84%91/"/>
    
    <category term="AI大模型" scheme="https://chenzuoli.github.io/tags/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>乐知付-如何使用平台收款</title>
    <link href="https://chenzuoli.github.io/2024/06/24/%E4%B9%90%E7%9F%A5%E4%BB%98-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%B9%B3%E5%8F%B0%E6%94%B6%E6%AC%BE/"/>
    <id>https://chenzuoli.github.io/2024/06/24/%E4%B9%90%E7%9F%A5%E4%BB%98-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%B9%B3%E5%8F%B0%E6%94%B6%E6%AC%BE/</id>
    <published>2024-06-24T13:58:28.000Z</published>
    <updated>2024-06-24T14:04:05.604Z</updated>
    
    <content type="html"><![CDATA[<p>应广大网友的热烈反馈，乐知付加密平台，**”平台收款”功能于今日上线了<strong>，相较于</strong>“个人收款码收款”功能；准确率更高，更简单便捷** 。</p><p><img src="/2024/06/24/%E4%B9%90%E7%9F%A5%E4%BB%98-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%B9%B3%E5%8F%B0%E6%94%B6%E6%AC%BE/%E5%B9%B3%E5%8F%B0%E6%94%B6%E6%AC%BE.jpg" alt="平台收款.jpg"></p><span id="more"></span><h4 id="收款码收款方式："><a href="#收款码收款方式：" class="headerlink" title="收款码收款方式："></a>收款码收款方式：</h4><ol><li>个人收款码收款 –买家付款后，付款金额直达卖家支付宝账户；同时，解密密码显示给买家</li><li>平台收款 –买家付款后，付款金额直达乐知付加密平台，卖家每周可提现；同时，解密密码显示给买家<br>这种模式的好处是:只要资源够好，价格设置合理，网民朋友们乐于支付，为此买单。</li></ol><h4 id="收款码收款准确率："><a href="#收款码收款准确率：" class="headerlink" title="收款码收款准确率："></a>收款码收款准确率：</h4><ol><li>个人收款码收款<br>准确率 98% ；买家资源付费后，按设置金额比例1%收费服务费 ；服务费从账户余额中扣除，如果余额不足请及时充值。</li><li>平台收款<br>准确率 100% ；买家资源付费后，平台不收取任何服务费 ；提现时收取8%手续费，请确认预计到账金额。</li></ol><h4 id="收款码收款【操作流程】"><a href="#收款码收款【操作流程】" class="headerlink" title="收款码收款【操作流程】"></a>收款码收款【操作流程】</h4><p>进入[支付管理]-&gt;[收款码收款]-&gt;[收款码收款]，生成独有收款链接，卖家可通过此链接，进行加密资源付费获取。<br>示例图：<br><img src="/2024/06/24/%E4%B9%90%E7%9F%A5%E4%BB%98-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%B9%B3%E5%8F%B0%E6%94%B6%E6%AC%BE/add_qrcode.png" alt="01.png"></p><p><img src="/2024/06/24/%E4%B9%90%E7%9F%A5%E4%BB%98-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%B9%B3%E5%8F%B0%E6%94%B6%E6%AC%BE/add_qrcode2.png" alt="02.png"></p><h4 id="邀请佣金奖励"><a href="#邀请佣金奖励" class="headerlink" title="邀请佣金奖励"></a>邀请佣金奖励</h4><p>永久性推广提成，比例高达 40% 下线用户每笔订单所消耗服务费的40%，自动进入您的账户推广赚取佣金通道<br><a href="https://lezhifu.cc/help/how_to_spread.html">如何推广</a></p><h4 id="禁止舞弊行为（机器批量注册等），一经发现，立即取消下线推广资格。"><a href="#禁止舞弊行为（机器批量注册等），一经发现，立即取消下线推广资格。" class="headerlink" title="禁止舞弊行为（机器批量注册等），一经发现，立即取消下线推广资格。"></a>禁止舞弊行为（机器批量注册等），一经发现，立即取消下线推广资格。</h4><hr><p>欢迎关注微信公众号，资源可变现平台：【<strong>乐知付加密平台</strong>】</p><hr><p>欢迎关注微信公众号：【乐知付加密平台】<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;应广大网友的热烈反馈，乐知付加密平台，**”平台收款”功能于今日上线了&lt;strong&gt;，相较于&lt;/strong&gt;“个人收款码收款”功能；准确率更高，更简单便捷** 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2024/06/24/%E4%B9%90%E7%9F%A5%E4%BB%98-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%B9%B3%E5%8F%B0%E6%94%B6%E6%AC%BE/%E5%B9%B3%E5%8F%B0%E6%94%B6%E6%AC%BE.jpg&quot; alt=&quot;平台收款.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="网站" scheme="https://chenzuoli.github.io/categories/%E7%BD%91%E7%AB%99/"/>
    
    <category term="乐知付" scheme="https://chenzuoli.github.io/categories/%E7%BD%91%E7%AB%99/%E4%B9%90%E7%9F%A5%E4%BB%98/"/>
    
    <category term="平台收款" scheme="https://chenzuoli.github.io/categories/%E7%BD%91%E7%AB%99/%E4%B9%90%E7%9F%A5%E4%BB%98/%E5%B9%B3%E5%8F%B0%E6%94%B6%E6%AC%BE/"/>
    
    
    <category term="乐知付" scheme="https://chenzuoli.github.io/tags/%E4%B9%90%E7%9F%A5%E4%BB%98/"/>
    
    <category term="收款" scheme="https://chenzuoli.github.io/tags/%E6%94%B6%E6%AC%BE/"/>
    
  </entry>
  
  <entry>
    <title>支付宝电脑网页支付上线生产问题</title>
    <link href="https://chenzuoli.github.io/2024/06/22/%E6%94%AF%E4%BB%98%E5%AE%9D%E7%94%B5%E8%84%91%E7%BD%91%E9%A1%B5%E6%94%AF%E4%BB%98%E4%B8%8A%E7%BA%BF%E7%94%9F%E4%BA%A7%E9%97%AE%E9%A2%98/"/>
    <id>https://chenzuoli.github.io/2024/06/22/%E6%94%AF%E4%BB%98%E5%AE%9D%E7%94%B5%E8%84%91%E7%BD%91%E9%A1%B5%E6%94%AF%E4%BB%98%E4%B8%8A%E7%BA%BF%E7%94%9F%E4%BA%A7%E9%97%AE%E9%A2%98/</id>
    <published>2024-06-22T11:58:15.000Z</published>
    <updated>2024-06-22T12:14:39.967Z</updated>
    
    <content type="html"><![CDATA[<p>支付宝沙箱环境测试ok了，上线生产还是碰到一些问题，这里记录一下。</p><span id="more"></span><ol><li>订单信息无法识别<br><img src="/2024/06/22/%E6%94%AF%E4%BB%98%E5%AE%9D%E7%94%B5%E8%84%91%E7%BD%91%E9%A1%B5%E6%94%AF%E4%BB%98%E4%B8%8A%E7%BA%BF%E7%94%9F%E4%BA%A7%E9%97%AE%E9%A2%98/image.png" alt="error_order_info"></li></ol><p>订单信息无法识别，建议联系卖家。错误码：INVALID_PARAMETER</p><p>这里是我发送支付请求的参数，沙箱环境里设置了buyer_id，上生产时，我把这个buyer_id设置为随机id了，导致了这个错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    // 发送支付请求</span><br><span class="line">    let payment_amount = $(&quot;#payment_amount&quot;).val();</span><br><span class="line">    let subject = $(&quot;#subject&quot;).val();</span><br><span class="line">    post_params = &#123;</span><br><span class="line">        &quot;trade_no&quot;: order_id,</span><br><span class="line">        &quot;total_amount&quot;: payment_amount,</span><br><span class="line">        &quot;subject&quot;: subject,</span><br><span class="line">//        &quot;buyer_id&quot;: &quot;2088722036238535&quot;, // 沙箱版支付宝买家id</span><br><span class="line">        &quot;buyer_id&quot;: guid(),</span><br><span class="line">        &quot;product_code&quot;: &#x27;FAST_INSTANT_TRADE_PAY&#x27;,</span><br><span class="line">        &quot;content_id&quot;: content_id</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>解决办法就是不需要穿buyer_id，拿掉就行。</p><ol start="2"><li>这里记录一下从沙箱环境切换到正式生产环境需要的步骤<br>三个密钥文件为生产参数<br>a. 支付宝公钥<br>b. 应用公钥<br>c. 应用私钥</li></ol><p>修改app_id和支付网关<br>a. ALIPAY_APP_ID<br>b. ALIPAY_SERVER_URL</p><hr><p>欢迎关注微信公众号，你的资源可变现：【乐知付加密平台】<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>欢迎关注微信公众号，这里记录博主的创业之旅：【程序员写书】<br><img src="/images/coder_and_writer.png" alt="程序员写书"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;支付宝沙箱环境测试ok了，上线生产还是碰到一些问题，这里记录一下。&lt;/p&gt;</summary>
    
    
    
    <category term="网站" scheme="https://chenzuoli.github.io/categories/%E7%BD%91%E7%AB%99/"/>
    
    <category term="网页支付" scheme="https://chenzuoli.github.io/categories/%E7%BD%91%E7%AB%99/%E7%BD%91%E9%A1%B5%E6%94%AF%E4%BB%98/"/>
    
    <category term="支付宝" scheme="https://chenzuoli.github.io/categories/%E7%BD%91%E7%AB%99/%E7%BD%91%E9%A1%B5%E6%94%AF%E4%BB%98/%E6%94%AF%E4%BB%98%E5%AE%9D/"/>
    
    
    <category term="乐知付" scheme="https://chenzuoli.github.io/tags/%E4%B9%90%E7%9F%A5%E4%BB%98/"/>
    
    <category term="支付宝" scheme="https://chenzuoli.github.io/tags/%E6%94%AF%E4%BB%98%E5%AE%9D/"/>
    
    <category term="网页支付" scheme="https://chenzuoli.github.io/tags/%E7%BD%91%E9%A1%B5%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>支付宝支付成功异步回调问题</title>
    <link href="https://chenzuoli.github.io/2024/06/13/%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%AF%E4%BB%98%E6%88%90%E5%8A%9F%E5%BC%82%E6%AD%A5%E5%9B%9E%E8%B0%83%E9%97%AE%E9%A2%98/"/>
    <id>https://chenzuoli.github.io/2024/06/13/%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%AF%E4%BB%98%E6%88%90%E5%8A%9F%E5%BC%82%E6%AD%A5%E5%9B%9E%E8%B0%83%E9%97%AE%E9%A2%98/</id>
    <published>2024-06-13T14:35:27.000Z</published>
    <updated>2024-06-22T01:53:33.901Z</updated>
    
    <content type="html"><![CDATA[<p>接过支付宝支付接口的朋友应该知道，支付代码中设置的有两个回调url。<br>一个是同步回调url，支付成功后，自动跳转到此url，<br>另一个是异步回调url，支付成功后，支付宝后台异步通过post方式调用此url，此异步通知才能真正来判断是否支付成功。</p><p>但是我在开发过程中，使用支付宝沙箱环境（测试环境）时，没收到异步通知，相信大家应该也会碰到这个问题，这里记录下这个问题。</p><span id="more"></span><p>问题分类 : [“支付转账类问题”]</p><p>请选择产品 : [“电脑网站支付”]</p><p>问题描述 : 沙箱环境异步回调没有接收到<br>应用网关地址：<a href="https://xxxx.com/">https://xxxx.com</a><br>授权回调地址：<a href="https://xxxx.com/notify_url">https://xxxx.com/notify_url</a></p><p>已经通过postman post方式调用过此地址：<a href="https://xxxx.com/notify_url">https://xxxx.com/notify_url</a><br>后台能够接受到postman的访问请求</p><p>但是沙箱环境支付成功后，没有收到支付宝的异步请求通知，问下咋回事。</p><p>咨询了支付宝技术支持，发给他trade_no，他后台能够查到已经发送了异步通知，但是返回415状态码，(Unsupported Media Type) 不支持的类型异常。</p><p>原来他们使用的是默认的x-www-form-urlencoded Content-Type发送post请求，而我的异步通知后台是通过application&#x2F;json方式接收的参数，所以报错415。</p><p>原来不是我notify_url设置的不对、不是我密钥配置的不对、不是我appid设置的不对、不是我验证签名不对，而是接收参数的方式不对。</p><p>好了，已经能够接收到异步通知了。</p><p>记录一下。</p><hr><p>欢迎关注微信公众号，你的资源可变现：【乐知付加密平台】<br><img src="/images/wechat_account.png" alt="乐知付加密平台"></p><p>一起学习，一起进步。<br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;接过支付宝支付接口的朋友应该知道，支付代码中设置的有两个回调url。&lt;br&gt;一个是同步回调url，支付成功后，自动跳转到此url，&lt;br&gt;另一个是异步回调url，支付成功后，支付宝后台异步通过post方式调用此url，此异步通知才能真正来判断是否支付成功。&lt;/p&gt;
&lt;p&gt;但是我在开发过程中，使用支付宝沙箱环境（测试环境）时，没收到异步通知，相信大家应该也会碰到这个问题，这里记录下这个问题。&lt;/p&gt;</summary>
    
    
    
    <category term="网站" scheme="https://chenzuoli.github.io/categories/%E7%BD%91%E7%AB%99/"/>
    
    <category term="网页支付" scheme="https://chenzuoli.github.io/categories/%E7%BD%91%E7%AB%99/%E7%BD%91%E9%A1%B5%E6%94%AF%E4%BB%98/"/>
    
    <category term="支付宝" scheme="https://chenzuoli.github.io/categories/%E7%BD%91%E7%AB%99/%E7%BD%91%E9%A1%B5%E6%94%AF%E4%BB%98/%E6%94%AF%E4%BB%98%E5%AE%9D/"/>
    
    
    <category term="支付宝" scheme="https://chenzuoli.github.io/tags/%E6%94%AF%E4%BB%98%E5%AE%9D/"/>
    
    <category term="网站支付" scheme="https://chenzuoli.github.io/tags/%E7%BD%91%E7%AB%99%E6%94%AF%E4%BB%98/"/>
    
    <category term="异步回调" scheme="https://chenzuoli.github.io/tags/%E5%BC%82%E6%AD%A5%E5%9B%9E%E8%B0%83/"/>
    
  </entry>
  
</feed>
